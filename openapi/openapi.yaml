openapi: 3.1.0
info:
  version: 1.0.0
  title: Example.com
  termsOfService: 'https://example.com/terms/'
  contact:
    email: contact@example.com
    url: 'http://example.com/contact'
  license:
    name: Apache 2.0
    identifier: BSD-3-Clause-Clear
  x-logo:
    url: 'https://redocly.github.io/openapi-template/logo.png'
  description:
    $ref: ./info-description.md
tags:
  - name: Echo
    description: Example echo operations.
  - name: User
    description: Operations about users.
  - name: Tag
    description: This is a tag description.
servers:
  - url: 'https://{tenant}/api/v1'
    variables:
      tenant:
        default: www
        description: Your tenant id
    description: Hello
  - url: 'https://example.com/api/v1'
paths:
  '/users/{username}':
    $ref: 'paths/users_{username}.yaml'
  /echo:
    $ref: paths/echo.yaml
  /pathItem:
    $ref: paths/path-item.yaml
  /pathItemWithExamples:
    $ref: paths/path-item-with-examples.yaml
  '/replants/{id}':
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      operationId: get-replants
      parameters:
        - schema:
            type: string
          in: query
          name: id
          description: fgfdgdfgdfgdfgdf
        - schema:
            type: string
          in: header
          name: Authorization
      description: vcxvxcvxcvxcv fsdfsdfsdfds
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./components/schemas/User.yaml
    post:
      summary: ''
      operationId: post-replants
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - type: object
                  properties:
                    id:
                      type: string
                    email:
                      type: string
                      description: Мой супер-пупер email
                      format: email
                    '':
                      type: string
                  required:
                    - email
                - $ref: ./components/schemas/Email.yaml
        description: 'Hello '
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: fdsfdsfdsfsd
components:
  securitySchemes:
    main_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://example.com/api/oauth/dialog'
          scopes:
            'read:users': read users info
            'write:users': modify or remove users
    api_key:
      type: apiKey
      in: header
      name: api_key
    basic_auth:
      type: http
      scheme: basic
